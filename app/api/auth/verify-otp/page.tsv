"use client"

import { useState, useRef } from "react"
import { useToast } from "@/hooks/use-toast"
import { AuthLayout } from "@/components/auth-layout"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { useRouter } from "next/navigation"

export default function MFAPage() {
  const [otp, setOtp] = useState(["", "", "", "", "", ""])
  const [error, setError] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const inputRefs = useRef<(HTMLInputElement | null)[]>([])
  const { toast } = useToast()
  const router = useRouter()

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    const token = otp.join("")
    if (token.length !== 6) return setError("Enter all 6 digits")
    setIsLoading(true)

    const res = await fetch("/api/auth/verify-otp", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ token }),
    })

    const data = await res.json()
    if (!res.ok) {
      setError(data.error || "Invalid OTP")
    } else {
      toast({ title: "MFA verified!" })
      router.push("/dashboard")
    }
    setIsLoading(false)
  }

  return (
    <AuthLayout>
      <form onSubmit={handleSubmit}>
        <div className="flex space-x-2">
          {otp.map((digit, index) => (
            <Input
              key={index}
              value={digit}
              onChange={(e) => {
                const newOtp = [...otp]
                newOtp[index] = e.target.value
                setOtp(newOtp)
              }}
              className="w-10 text-center"
              maxLength={1}
            />
          ))}
        </div>
        {error && <p className="text-red-500 text-sm">{error}</p>}
        <Button type="submit" disabled={isLoading}>
          {isLoading ? "Verifying..." : "Verify Code"}
        </Button>
      </form>
    </AuthLayout>
  )
}